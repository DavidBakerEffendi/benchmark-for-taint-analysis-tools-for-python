b'{\n  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",\n  "version": "2.1.0",\n  "runs": [\n    {\n      "tool": {\n        "driver": {\n          "name": "SnykCode",\n          "semanticVersion": "1.0.0",\n          "version": "1.0.0",\n          "rules": [\n            {\n              "id": "python/incomplete~url~sanitazation",\n              "name": "incomplete~url~sanitazation",\n              "shortDescription": {\n                "text": "incomplete~url~sanitazation"\n              },\n              "defaultConfiguration": {\n                "level": "warning"\n              },\n              "help": {\n                "markdown": "",\n                "text": ""\n              },\n              "properties": {\n                "tags": [\n                  "python",\n                  "maintenance",\n                  "improvement",\n                  "v4",\n                  "github.com",\n                  "age"\n                ],\n                "categories": [\n                  "Security"\n                ],\n                "exampleCommitFixes": [\n                  {\n                    "commitURL": "https://github.com/fake-name/ReadableWebProxy/commit/7a24595ead16306c638e2f0763f9e977166fbb5c?diff=split#diff-7377f673ea73b36446671aba7b1e6291L143",\n                    "lines": [\n                      {\n                        "line": "  def wantsUrl(url):",\n                        "lineNumber": 217,\n                        "lineChange": "none"\n                      },\n                      {\n                        "line": "    netloc = urllib.parse.urlsplit(url).netloc",\n                        "lineNumber": 218,\n                        "lineChange": "none"\n                      },\n                      {\n                        "line": "    return netloc.lower().endswith(\\"www.webnovel.com\\")",\n                        "lineNumber": 142,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "    return netloc.lower().endswith(\\".webnovel.com\\")",\n                        "lineNumber": 219,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "ast",\n                        "lineNumber": 220,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "\\\\ No newline at end of file",\n                        "lineNumber": 221,\n                        "lineChange": "none"\n                      }\n                    ]\n                  },\n                  {\n                    "commitURL": "https://github.com/minio/minio-py/commit/d3f78bd2823694ec174bbd0c71bc9eac62700c2f?diff=split#diff-fcb41fe0cf76def6ffe532956529148bL140",\n                    "lines": [\n                      {\n                        "line": "    raise InvalidEndpointError(\'endpoint\')",\n                        "lineNumber": 137,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "if hostname.endswith(\'amazonaws.com\') and (hostname != \'s3.amazonaws.com\'):",\n                        "lineNumber": 139,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "    raise InvalidEndpointError(\'endpoint\')",\n                        "lineNumber": 140,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "    raise InvalidEndpointError(\'Hostname does not meet URL standards.\')",\n                        "lineNumber": 182,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "if hostname.endswith(\'.amazonaws.com\') and (hostname != \'s3.amazonaws.com\'):",\n                        "lineNumber": 184,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "    raise InvalidEndpointError(\'Amazon S3 hostname should be s3.amazonaws.com.\')",\n                        "lineNumber": 185,\n                        "lineChange": "added"\n                      }\n                    ]\n                  },\n                  {\n                    "commitURL": "https://github.com/tdryer/hangups/commit/4e597f4f182cf8e1d9426cc50084cbb767d0dedf?diff=split#diff-8f2b2a6645c82b7a69d429e453132015L79",\n                    "lines": [\n                      {\n                        "line": "    raise ValueError(\'The given URI \\"%s\\" is not valid\' % url)",\n                        "lineNumber": 76,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "if hostname.endswith(\'google.com\'):",\n                        "lineNumber": 78,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "    kwargs[\'headers\'] = kwargs.get(\'headers\') or {}",\n                        "lineNumber": 79,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "    kwargs[\'headers\'].update(",\n                        "lineNumber": 80,\n                        "lineChange": "removed"\n                      },\n                      {\n                        "line": "# Ensure we don\'t accidentally send the authorization header to a",\n                        "lineNumber": 116,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "# non-Google domain:",\n                        "lineNumber": 117,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "assert urllib.parse.urlparse(url).hostname.endswith(\'.google.com\')",\n                        "lineNumber": 118,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "headers = headers or {}",\n                        "lineNumber": 119,\n                        "lineChange": "added"\n                      },\n                      {\n                        "line": "headers.update(self._authorization_headers)",\n                        "lineNumber": 120,\n                        "lineChange": "added"\n                      }\n                    ]\n                  }\n                ],\n                "exampleCommitDescriptions": [\n                  "Add more signature v4 documentation and cleanup.",\n                  "also deploy to \'master\' if \'github.com\' site",\n                  "$ ag --ignore=_vendor \'pypi.python.org\' pip\\n77:PyPI = Index(url=\'\', trusted=True)"\n                ],\n                "precision": "very-high",\n                "repoDatasetSize": 10\n              }\n            }\n          ]\n        }\n      },\n      "results": [\n        {\n          "ruleId": "python/incomplete~url~sanitazation",\n          "ruleIndex": 4,\n          "level": "warning",\n          "message": {\n            "text": "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.",\n            "markdown": "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.",\n            "arguments": []\n          },\n          "locations": [\n            {\n              "physicalLocation": {\n                "artifactLocation": {\n                  "uri": "real-world-projects/DVSA/backend/src/functions/user/user_inbox.py",\n                  "uriBaseId": "%SRCROOT%"\n                },\n                "region": {\n                  "startLine": 95,\n                  "endLine": 95,\n                  "startColumn": 57,\n                  "endColumn": 71\n                }\n              }\n            }\n          ],\n          "fingerprints": {\n            "0": "5be7eb078f30d8b328bb1b306ef8dba89c71e996363ba4ae9029cc1c9f9fd6c2",\n            "1": "da9cf85a.b015a4eb.425259ff.90a3c50f.1d07cee4.a5d7f69f.2701234b.e9e55bec.da9cf85a.b015a4eb.425259ff.90a3c50f.1d07cee4.a5d7f69f.2701234b.e9e55bec"\n          },\n          "codeFlows": [\n            {\n              "threadFlows": [\n                {\n                  "locations": [\n                    {\n                      "location": {\n                        "id": 0,\n                        "physicalLocation": {\n                          "artifactLocation": {\n                            "uri": "real-world-projects/DVSA/backend/src/functions/user/user_inbox.py",\n                            "uriBaseId": "%SRCROOT%"\n                          },\n                          "region": {\n                            "startLine": 95,\n                            "endLine": 95,\n                            "startColumn": 57,\n                            "endColumn": 71\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          "properties": {\n            "priorityScore": 554,\n            "priorityScoreFactors": [\n              {\n                "label": true,\n                "type": "multipleOccurrence"\n              },\n              {\n                "label": true,\n                "type": "hotFileSource"\n              },\n              {\n                "label": true,\n                "type": "fixExamples"\n              }\n            ]\n          }\n        },\n        {\n          "ruleId": "python/incomplete~url~sanitazation",\n          "ruleIndex": 4,\n          "level": "warning",\n          "message": {\n            "text": "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.",\n            "markdown": "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.",\n            "arguments": []\n          },\n          "locations": [\n            {\n              "physicalLocation": {\n                "artifactLocation": {\n                  "uri": "real-world-projects/DVSA/backend/serverless/scripts/dvsa_init.py",\n                  "uriBaseId": "%SRCROOT%"\n                },\n                "region": {\n                  "startLine": 188,\n                  "endLine": 188,\n                  "startColumn": 12,\n                  "endColumn": 25\n                }\n              }\n            }\n          ],\n          "fingerprints": {\n            "0": "24f1b886e4691be36b6c864b696219e219f7489db0345d4c825b99d37b509346",\n            "1": "da9cf85a.f78c0fe7.2683ade8.ca9857df.1d07cee4.ba14daf2.2701234b.2d5715ad.da9cf85a.f78c0fe7.2683ade8.139c59a8.1d07cee4.ba14daf2.2701234b.2d5715ad"\n          },\n          "codeFlows": [\n            {\n              "threadFlows": [\n                {\n                  "locations": [\n                    {\n                      "location": {\n                        "id": 0,\n                        "physicalLocation": {\n                          "artifactLocation": {\n                            "uri": "real-world-projects/DVSA/backend/serverless/scripts/dvsa_init.py",\n                            "uriBaseId": "%SRCROOT%"\n                          },\n                          "region": {\n                            "startLine": 188,\n                            "endLine": 188,\n                            "startColumn": 12,\n                            "endColumn": 25\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          "properties": {\n            "priorityScore": 504,\n            "priorityScoreFactors": [\n              {\n                "label": true,\n                "type": "multipleOccurrence"\n              },\n              {\n                "label": true,\n                "type": "hotFileCodeFlow"\n              },\n              {\n                "label": true,\n                "type": "fixExamples"\n              }\n            ]\n          }\n        }\n      ],\n      "properties": {\n        "coverage": [\n          {\n            "files": 49,\n            "isSupported": true,\n            "lang": "Python"\n          },\n          {\n            "files": 46,\n            "isSupported": true,\n            "lang": "JavaScript"\n          }\n        ]\n      }\n    }\n  ]\n}\n'